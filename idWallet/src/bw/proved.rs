//
// Copyright 2019 Tamas Blummer
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//!
//! # SPV proved transaction
//!
//!

use bitcoin::hashes::{sha256d, Hash, HashEngine};
use bitcoin::{Block, Transaction};

/// A confirmed transaction with its SPV proof
#[derive(Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
pub struct ProvedTransaction {
    transaction: Transaction,
    merkle_path: Vec<(bool, sha256d::Hash)>,
    block_hash: bitcoin::BlockHash,
}

impl ProvedTransaction {
    pub fn new(block: &Block, txnr: usize) -> ProvedTransaction {
        let transaction = block.txdata[txnr].clone();
        ProvedTransaction {
            block_hash: block.header.block_hash(),
            merkle_path: Self::compute_proof(txnr, block),
            transaction,
        }
    }
    /// get a copy of the transaction
    pub fn get_transaction(&self) -> Transaction {
        self.transaction.clone()
    }

    pub fn get_block_hash(&self) -> &bitcoin::BlockHash {
        &self.block_hash
    }

    /// compute the merkle root implied by the SPV proof
    pub fn merkle_root(&self) -> bitcoin::TxMerkleNode {
        self.merkle_path.iter().fold(
            bitcoin::TxMerkleNode::from_inner(self.transaction.txid().into_inner()),
            |a, (left, h)| {
                let mut encoder = bitcoin::TxMerkleNode::engine();
                if *left {
                    encoder.input(&h[..]);
                    encoder.input(&a[..]);
                } else {
                    encoder.input(&a[..]);
                    encoder.input(&h[..]);
                }
                bitcoin::TxMerkleNode::from_engine(encoder)
            },
        )
    }

    /// compute a proof for a transaction in a block
    /// panics if transaction is not in the block
    pub fn compute_proof(mut track: usize, block: &Block) -> Vec<(bool, sha256d::Hash)> {
        /// one step of the reduction to merkle root
        /// it returns the reduced vector and also the operation applied to the tracked id
        /// the operation is (left, hash) left is true if hash should be hashed before the tracked id
        fn binhash(
            hashes: &[sha256d::Hash],
            track: usize,
        ) -> (Vec<sha256d::Hash>, Option<(usize, bool, sha256d::Hash)>) {
            let mut result = Vec::new();
            let mut op = None;
            if hashes.len() > 1 {
                for (i, pair) in hashes.chunks(2).enumerate() {
                    let mut engine = sha256d::Hash::engine();
                    if pair.len() == 1 {
                        if track == i * 2 {
                            op = Some((i, false, pair[0]));
                        } else if track == i * 2 + 1 {
                            op = Some((i, true, pair[0]));
                        }
                        engine.input(&pair[0][..]);
                        engine.input(&pair[0][..]);
                    } else {
                        if track == i * 2 {
                            op = Some((i, false, pair[1]));
                        } else if track == i * 2 + 1 {
                            op = Some((i, true, pair[0]));
                        }
                        engine.input(&pair[0][..]);
                        engine.input(&pair[1][..]);
                    }
                    result.push(sha256d::Hash::from_engine(engine));
                }
            }
            (result, op)
        }

        let mut ids = block
            .txdata
            .iter()
            .map(|t| t.txid().as_hash())
            .collect::<Vec<_>>();
        let mut proof = Vec::new();
        while let (i, Some((t, left, hash))) = binhash(ids.as_slice(), track) {
            proof.push((left, hash));
            ids = i;
            track = t;
        }
        proof
    }
}

#[cfg(test)]
mod test {
    use bitcoin::hashes::hex::FromHex;
    use bitcoin::{consensus, Block};

    use super::*;

    #[test]
    pub fn test_spv_proof() {
        let blockdump="";
        let block: Block =
            consensus::deserialize(Vec::<u8>::from_hex(blockdump).unwrap().as_slice()).unwrap();
        for (track, tx) in block.txdata.iter().enumerate() {
            let proof = ProvedTransaction::compute_proof(track, &block);
            let pt = ProvedTransaction {
                transaction: tx.clone(),
                merkle_path: proof,
                block_hash: block.header.block_hash(),
            };
            assert_eq!(pt.merkle_root(), block.header.merkle_root);
        }
    }
}
